<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Table Wrapper API
  ~ Copyright (C) 2020  Spacious Team <spacious-team@ya.ru>
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.spacious-team</groupId>
    <artifactId>table-wrapper-api</artifactId>
    <version>2022.4</version>
    <packaging>jar</packaging>

    <name>Table Wrapper API</name>
    <description>
        Helps to declare tables from various file formats and provides unified API
        for search and access to rows, columns, and cell values.
    </description>
    <url>https://github.com/spacious-team/table-wrapper-api</url>

    <licenses>
        <license>
            <name>GNU Affero GPLv3</name>
            <url>https://www.gnu.org/licenses/agpl-3.0.html</url>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/spacious-team/table-wrapper-api</url>
    </scm>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.36</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
            <scope>provided</scope> <!-- for static analysis tools only -->
        </dependency>
        <dependency>
			<groupId>org.checkerframework</groupId>
			<artifactId>checker-qual</artifactId>
			<version>3.45.1-SNAPSHOT</version>
		</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <profiles>
      <profile>
      <id>CheckerFramework</id>
      <!-- If you omit the activation block, run mvn with "-P checkerframework" to run checkers. -->
      <build>
          <plugins>
          <plugin>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>3.11.0</version>
              <configuration>
              <fork>true</fork> <!-- Must fork or else JVM arguments are ignored. -->
              <annotationProcessorPaths>
                  <path>
                  <groupId>org.checkerframework</groupId>
                  <artifactId>checker</artifactId>
                  <version>3.45.1-SNAPSHOT</version>
                  </path>
              </annotationProcessorPaths>
              <annotationProcessors>
                  <!-- Add all the checkers you want to enable here -->
                  <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
              </annotationProcessors>
              <compilerArgs>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                <arg>-AassumePure</arg>
                <arg>-Adetailedmsgtex</arg>
                <arg>-AshowPrefixInWarningMessages</arg>
                <arg>-J-Xmx32G</arg>
                <arg>-Xmaxerrs</arg>
                <arg>10000</arg>
                <arg>-g</arg>
                <arg>-Ainfer=ajava</arg>
                <arg>-Awarns</arg>
                <arg>-AinferOutputOriginal</arg>
                <arg>-Aajava=/tmp/WPITEMP-table-wrapper-api</arg>
              </compilerArgs>
              </configuration>
          </plugin>
          </plugins>
      </build>
      </profile>
  </profiles>
</project>

